{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\nimport { SocketEventsEnum } from 'src/app/shared/types/socketEvents.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/boards.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/board.service\";\nimport * as i4 from \"src/app/shared/services/socket.service\";\nimport * as i5 from \"src/app/shared/services/columns.service\";\nimport * as i6 from \"src/app/shared/services/tasks.service\";\nimport * as i7 from \"../../../shared/modules/topbar/components/topbar/topbar.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../../shared/modules/inlineForm/components/inlineForm/inlineForm.component\";\n\nfunction BoardComponent_div_1_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_div_6_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const task_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(3);\n      return ctx_r6.openTask(task_r5.id);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r5.title, \" \");\n  }\n}\n\nfunction BoardComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"inline-form\", 10);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const column_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.updateColumnName($event, column_r3.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"img\", 11);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_div_6_Template_img_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const column_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.deleteColumn(column_r3.id);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, BoardComponent_div_1_div_6_div_4_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(5, \"inline-form\", 13);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const column_r3 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.createTask($event, column_r3.id);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const column_r3 = ctx.$implicit;\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"defaultText\", column_r3.title)(\"title\", column_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getTasksByColumn(column_r3.id, data_r1.tasks));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hasButton\", true);\n  }\n}\n\nfunction BoardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"inline-form\", 3);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_Template_inline_form_handleSubmit_2_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.updateBoardName($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.deleteBoard();\n    });\n    i0.ɵɵtext(4, \"Delete board\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵtemplate(6, BoardComponent_div_1_div_6_Template, 6, 4, \"div\", 6);\n    i0.ɵɵelementStart(7, \"inline-form\", 7);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_Template_inline_form_handleSubmit_7_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.createColumn($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"defaultText\", data_r1.board.title)(\"title\", data_r1.board.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", data_r1.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hasButton\", true);\n  }\n}\n\nexport class BoardComponent {\n  constructor(boardsService, route, router, boardService, socketService, columnsService, tasksService) {\n    this.boardsService = boardsService;\n    this.route = route;\n    this.router = router;\n    this.boardService = boardService;\n    this.socketService = socketService;\n    this.columnsService = columnsService;\n    this.tasksService = tasksService;\n    this.unsubscribe$ = new Subject();\n    const boardId = this.route.snapshot.paramMap.get('boardId');\n\n    if (!boardId) {\n      throw new Error('Cant get boardID from url');\n    }\n\n    this.boardId = boardId;\n    this.data$ = combineLatest([this.boardService.board$.pipe(filter(Boolean)), this.boardService.columns$, this.boardService.tasks$]).pipe(map(([board, columns, tasks]) => ({\n      board,\n      columns,\n      tasks\n    })));\n  }\n\n  ngOnInit() {\n    this.socketService.emit(SocketEventsEnum.boardsJoin, {\n      boardId: this.boardId\n    });\n    this.fetchData();\n    this.initializeListeners();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  initializeListeners() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart && !event.url.includes('/boards/')) {\n        this.boardService.leaveBoard(this.boardId);\n      }\n    });\n    this.socketService.listen(SocketEventsEnum.columnsCreateSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(column => {\n      this.boardService.addColumn(column);\n    });\n    this.socketService.listen(SocketEventsEnum.columnsDeleteSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(columnId => {\n      this.boardService.deleteColumn(columnId);\n    });\n    this.socketService.listen(SocketEventsEnum.tasksCreateSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(task => {\n      this.boardService.addTask(task);\n    });\n    this.socketService.listen(SocketEventsEnum.boardsUpdateSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(updatedBoard => {\n      this.boardService.updateBoard(updatedBoard);\n    });\n    this.socketService.listen(SocketEventsEnum.columnsUpdateSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(updatedColumn => {\n      this.boardService.updateColumn(updatedColumn);\n    });\n    this.socketService.listen(SocketEventsEnum.tasksUpdateSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(updatedTask => {\n      this.boardService.updateTask(updatedTask);\n    });\n    this.socketService.listen(SocketEventsEnum.tasksDeleteSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(taskId => {\n      this.boardService.deleteTask(taskId);\n    });\n    this.socketService.listen(SocketEventsEnum.boardsDeleteSuccess).pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.router.navigateByUrl('/boards');\n    });\n  }\n\n  fetchData() {\n    this.boardsService.getBoard(this.boardId).subscribe(board => {\n      this.boardService.setBoard(board);\n    });\n    this.columnsService.getColumns(this.boardId).subscribe(columns => {\n      this.boardService.setColumns(columns);\n    });\n    this.tasksService.getTasks(this.boardId).subscribe(tasks => {\n      this.boardService.setTasks(tasks);\n    });\n  }\n\n  createColumn(title) {\n    const columnInput = {\n      title,\n      boardId: this.boardId\n    };\n    this.columnsService.createColumn(columnInput);\n  }\n\n  createTask(title, columnId) {\n    const taskInput = {\n      title,\n      boardId: this.boardId,\n      columnId\n    };\n    this.tasksService.createTask(taskInput);\n  }\n\n  getTasksByColumn(columnId, tasks) {\n    return tasks.filter(task => task.columnId === columnId);\n  }\n\n  updateBoardName(boardName) {\n    this.boardsService.updateBoard(this.boardId, {\n      title: boardName\n    });\n  }\n\n  deleteBoard() {\n    if (confirm('Are you sure you want to delete the board?')) {\n      this.boardsService.deleteBoard(this.boardId);\n    }\n  }\n\n  deleteColumn(columnId) {\n    this.columnsService.deleteColumn(this.boardId, columnId);\n  }\n\n  updateColumnName(columnName, columnId) {\n    this.columnsService.updateColumn(this.boardId, columnId, {\n      title: columnName\n    });\n  }\n\n  openTask(taskId) {\n    this.router.navigate(['boards', this.boardId, 'tasks', taskId]);\n  }\n\n}\n\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.SocketService), i0.ɵɵdirectiveInject(i5.ColumnsService), i0.ɵɵdirectiveInject(i6.TasksService));\n};\n\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"board\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"board\", 4, \"ngIf\"], [1, \"board\"], [1, \"board-header-container\"], [1, \"edit-board-form\", 3, \"defaultText\", \"title\", \"handleSubmit\"], [1, \"delete-board\", 3, \"click\"], [1, \"columns\"], [\"class\", \"column\", 4, \"ngFor\", \"ngForOf\"], [\"defaultText\", \"Add a list\", \"buttonText\", \"Add list\", \"inputPlaceholder\", \"Add column name\", 1, \"create-column-form\", 3, \"hasButton\", \"handleSubmit\"], [1, \"column\"], [1, \"column-title\"], [1, \"edit-column-form\", 3, \"defaultText\", \"title\", \"handleSubmit\"], [\"src\", \"/assets/close_icon.svg\", 1, \"column-delete-icon\", 3, \"click\"], [\"class\", \"task\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"defaultText\", \"Add a card\", \"buttonText\", \"Add card\", \"inputPlaceholder\", \"Enter a title for this card\", 1, \"create-task-form\", 3, \"hasButton\", \"handleSubmit\"], [1, \"task\", 3, \"click\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-topbar\");\n      i0.ɵɵtemplate(1, BoardComponent_div_1_Template, 8, 4, \"div\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelement(3, \"router-outlet\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.data$));\n    }\n  },\n  directives: [i7.TopbarComponent, i8.NgIf, i9.InlineFormComponent, i8.NgForOf, i2.RouterOutlet],\n  pipes: [i8.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/inmac/Downloads/trello-socket-io-47-deployment/client/src/app/board/components/board/board.component.ts"],"names":["NavigationStart","combineLatest","filter","map","Subject","takeUntil","SocketEventsEnum","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","BoardComponent_div_1_div_6_div_4_Template","rf","ctx","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","BoardComponent_div_1_div_6_div_4_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","task_r5","$implicit","ctx_r6","ɵɵnextContext","openTask","id","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","title","BoardComponent_div_1_div_6_Template","_r9","BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_2_listener","$event","column_r3","ctx_r8","updateColumnName","BoardComponent_div_1_div_6_Template_img_click_3_listener","ctx_r10","deleteColumn","ɵɵtemplate","BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_5_listener","ctx_r11","createTask","data_r1","ngIf","ctx_r2","ɵɵproperty","getTasksByColumn","tasks","BoardComponent_div_1_Template","_r14","BoardComponent_div_1_Template_inline_form_handleSubmit_2_listener","ctx_r13","updateBoardName","BoardComponent_div_1_Template_div_click_3_listener","ctx_r15","deleteBoard","BoardComponent_div_1_Template_inline_form_handleSubmit_7_listener","ctx_r16","createColumn","board","columns","BoardComponent","constructor","boardsService","route","router","boardService","socketService","columnsService","tasksService","unsubscribe$","boardId","snapshot","paramMap","get","Error","data$","board$","pipe","Boolean","columns$","tasks$","ngOnInit","emit","boardsJoin","fetchData","initializeListeners","ngOnDestroy","next","complete","events","subscribe","event","url","includes","leaveBoard","listen","columnsCreateSuccess","column","addColumn","columnsDeleteSuccess","columnId","tasksCreateSuccess","task","addTask","boardsUpdateSuccess","updatedBoard","updateBoard","columnsUpdateSuccess","updatedColumn","updateColumn","tasksUpdateSuccess","updatedTask","updateTask","tasksDeleteSuccess","taskId","deleteTask","boardsDeleteSuccess","navigateByUrl","getBoard","setBoard","getColumns","setColumns","getTasks","setTasks","columnInput","taskInput","boardName","confirm","columnName","navigate","ɵfac","BoardComponent_Factory","t","ɵɵdirectiveInject","BoardsService","ActivatedRoute","Router","BoardService","SocketService","ColumnsService","TasksService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","BoardComponent_Template","ɵɵelement","ɵɵpipe","ɵɵpipeBind1","directives","TopbarComponent","NgIf","InlineFormComponent","NgForOf","RouterOutlet","pipes","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { NavigationStart } from '@angular/router';\nimport { combineLatest, filter, map, Subject, takeUntil, } from 'rxjs';\nimport { SocketEventsEnum } from 'src/app/shared/types/socketEvents.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/boards.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/board.service\";\nimport * as i4 from \"src/app/shared/services/socket.service\";\nimport * as i5 from \"src/app/shared/services/columns.service\";\nimport * as i6 from \"src/app/shared/services/tasks.service\";\nimport * as i7 from \"../../../shared/modules/topbar/components/topbar/topbar.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../../shared/modules/inlineForm/components/inlineForm/inlineForm.component\";\nfunction BoardComponent_div_1_div_6_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_div_6_div_4_Template_div_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r7); const task_r5 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(3); return ctx_r6.openTask(task_r5.id); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r5.title, \" \");\n} }\nfunction BoardComponent_div_1_div_6_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"inline-form\", 10);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_2_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r9); const column_r3 = restoredCtx.$implicit; const ctx_r8 = i0.ɵɵnextContext(2); return ctx_r8.updateColumnName($event, column_r3.id); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"img\", 11);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_div_6_Template_img_click_3_listener() { const restoredCtx = i0.ɵɵrestoreView(_r9); const column_r3 = restoredCtx.$implicit; const ctx_r10 = i0.ɵɵnextContext(2); return ctx_r10.deleteColumn(column_r3.id); });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, BoardComponent_div_1_div_6_div_4_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(5, \"inline-form\", 13);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_div_6_Template_inline_form_handleSubmit_5_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r9); const column_r3 = restoredCtx.$implicit; const ctx_r11 = i0.ɵɵnextContext(2); return ctx_r11.createTask($event, column_r3.id); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r3 = ctx.$implicit;\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"defaultText\", column_r3.title)(\"title\", column_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getTasksByColumn(column_r3.id, data_r1.tasks));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hasButton\", true);\n} }\nfunction BoardComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"inline-form\", 3);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_Template_inline_form_handleSubmit_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.updateBoardName($event); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_1_Template_div_click_3_listener() { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.deleteBoard(); });\n    i0.ɵɵtext(4, \"Delete board\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵtemplate(6, BoardComponent_div_1_div_6_Template, 6, 4, \"div\", 6);\n    i0.ɵɵelementStart(7, \"inline-form\", 7);\n    i0.ɵɵlistener(\"handleSubmit\", function BoardComponent_div_1_Template_inline_form_handleSubmit_7_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r16 = i0.ɵɵnextContext(); return ctx_r16.createColumn($event); });\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"defaultText\", data_r1.board.title)(\"title\", data_r1.board.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", data_r1.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hasButton\", true);\n} }\nexport class BoardComponent {\n    constructor(boardsService, route, router, boardService, socketService, columnsService, tasksService) {\n        this.boardsService = boardsService;\n        this.route = route;\n        this.router = router;\n        this.boardService = boardService;\n        this.socketService = socketService;\n        this.columnsService = columnsService;\n        this.tasksService = tasksService;\n        this.unsubscribe$ = new Subject();\n        const boardId = this.route.snapshot.paramMap.get('boardId');\n        if (!boardId) {\n            throw new Error('Cant get boardID from url');\n        }\n        this.boardId = boardId;\n        this.data$ = combineLatest([\n            this.boardService.board$.pipe(filter(Boolean)),\n            this.boardService.columns$,\n            this.boardService.tasks$,\n        ]).pipe(map(([board, columns, tasks]) => ({\n            board,\n            columns,\n            tasks,\n        })));\n    }\n    ngOnInit() {\n        this.socketService.emit(SocketEventsEnum.boardsJoin, {\n            boardId: this.boardId,\n        });\n        this.fetchData();\n        this.initializeListeners();\n    }\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n    initializeListeners() {\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationStart && !event.url.includes('/boards/')) {\n                this.boardService.leaveBoard(this.boardId);\n            }\n        });\n        this.socketService\n            .listen(SocketEventsEnum.columnsCreateSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((column) => {\n            this.boardService.addColumn(column);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.columnsDeleteSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((columnId) => {\n            this.boardService.deleteColumn(columnId);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.tasksCreateSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((task) => {\n            this.boardService.addTask(task);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.boardsUpdateSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((updatedBoard) => {\n            this.boardService.updateBoard(updatedBoard);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.columnsUpdateSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((updatedColumn) => {\n            this.boardService.updateColumn(updatedColumn);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.tasksUpdateSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((updatedTask) => {\n            this.boardService.updateTask(updatedTask);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.tasksDeleteSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe((taskId) => {\n            this.boardService.deleteTask(taskId);\n        });\n        this.socketService\n            .listen(SocketEventsEnum.boardsDeleteSuccess)\n            .pipe(takeUntil(this.unsubscribe$))\n            .subscribe(() => {\n            this.router.navigateByUrl('/boards');\n        });\n    }\n    fetchData() {\n        this.boardsService.getBoard(this.boardId).subscribe((board) => {\n            this.boardService.setBoard(board);\n        });\n        this.columnsService.getColumns(this.boardId).subscribe((columns) => {\n            this.boardService.setColumns(columns);\n        });\n        this.tasksService.getTasks(this.boardId).subscribe((tasks) => {\n            this.boardService.setTasks(tasks);\n        });\n    }\n    createColumn(title) {\n        const columnInput = {\n            title,\n            boardId: this.boardId,\n        };\n        this.columnsService.createColumn(columnInput);\n    }\n    createTask(title, columnId) {\n        const taskInput = {\n            title,\n            boardId: this.boardId,\n            columnId,\n        };\n        this.tasksService.createTask(taskInput);\n    }\n    getTasksByColumn(columnId, tasks) {\n        return tasks.filter((task) => task.columnId === columnId);\n    }\n    updateBoardName(boardName) {\n        this.boardsService.updateBoard(this.boardId, { title: boardName });\n    }\n    deleteBoard() {\n        if (confirm('Are you sure you want to delete the board?')) {\n            this.boardsService.deleteBoard(this.boardId);\n        }\n    }\n    deleteColumn(columnId) {\n        this.columnsService.deleteColumn(this.boardId, columnId);\n    }\n    updateColumnName(columnName, columnId) {\n        this.columnsService.updateColumn(this.boardId, columnId, {\n            title: columnName,\n        });\n    }\n    openTask(taskId) {\n        this.router.navigate(['boards', this.boardId, 'tasks', taskId]);\n    }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) { return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.SocketService), i0.ɵɵdirectiveInject(i5.ColumnsService), i0.ɵɵdirectiveInject(i6.TasksService)); };\nBoardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BoardComponent, selectors: [[\"board\"]], decls: 4, vars: 3, consts: [[\"class\", \"board\", 4, \"ngIf\"], [1, \"board\"], [1, \"board-header-container\"], [1, \"edit-board-form\", 3, \"defaultText\", \"title\", \"handleSubmit\"], [1, \"delete-board\", 3, \"click\"], [1, \"columns\"], [\"class\", \"column\", 4, \"ngFor\", \"ngForOf\"], [\"defaultText\", \"Add a list\", \"buttonText\", \"Add list\", \"inputPlaceholder\", \"Add column name\", 1, \"create-column-form\", 3, \"hasButton\", \"handleSubmit\"], [1, \"column\"], [1, \"column-title\"], [1, \"edit-column-form\", 3, \"defaultText\", \"title\", \"handleSubmit\"], [\"src\", \"/assets/close_icon.svg\", 1, \"column-delete-icon\", 3, \"click\"], [\"class\", \"task\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"defaultText\", \"Add a card\", \"buttonText\", \"Add card\", \"inputPlaceholder\", \"Enter a title for this card\", 1, \"create-task-form\", 3, \"hasButton\", \"handleSubmit\"], [1, \"task\", 3, \"click\"]], template: function BoardComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"app-topbar\");\n        i0.ɵɵtemplate(1, BoardComponent_div_1_Template, 8, 4, \"div\", 0);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelement(3, \"router-outlet\");\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.data$));\n    } }, directives: [i7.TopbarComponent, i8.NgIf, i9.InlineFormComponent, i8.NgForOf, i2.RouterOutlet], pipes: [i8.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}